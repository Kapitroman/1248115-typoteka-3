extends layout.pug

block variables
  -
    const getFormatStringDate = (dateString) => {
      const date = new Date(dateString);
      const piecesDate = [
        `${date.getDate()}`.padStart(2, `0`),
        `${date.getMonth() + 1}`.padStart(2, `0`),
        `${date.getHours()}`.padStart(2, `0`),
        `${date.getMinutes()}`.padStart(2, `0`),
      ];

      return `${piecesDate[0]}.${piecesDate[1]}.${date.getFullYear()}, ${piecesDate[2]}:${piecesDate[3]}`;
    };

    const errorMessage = `опубликовании комментария`

block content

  main
    section.post
      h1.visually-hidden Пост
      section.post__content
        h2.visually-hidden Основное содержание
        .post__wrapper
          .post__head
            a.post__backwards.button.button--backwards(href='javascript:history.go(-1)') Назад
            time.post__date(datetime=`${article.createdAt}`) #{getFormatStringDate(article.createdAt)}
            h2.post__title.title.title--main #{article.title}
            ul.post__themes.themes
              each item of article.categories
                li.themes__item
                  a.themes__item-link(href=`/articles/category/${item.id}`)
                    | #{item.name}
                    sup #{categories.find((category) => category.id === item.id)[`count`]}
                  button.themes__remove-btn(type='button') Удалить категорию
          .post__picture
            if article.picture
              img(src=`/img/${article.picture}` alt=`${article.categories[0].name}` width='940' height='490')
          .post__text
            p #{article.announce}
            p #{article.fullText}

      .post__wrapper.post__wrapper--comments
        section.post__comments.comments
          if article.comments.length === 0
            h2.comments__title.title.title--middle Комментарии отсутствуют
          else
            h2.comments__title.title.title--middle Комментарии
            ul.comments__list
              each comment in article.comments
                li.comments__comment
                  .comments__avatar.avatar
                    img(src=`/img/${comment.users.avatar}` alt='аватар пользователя')
                  .comments__text
                    .comments__head
                      p #{comment.users.firstName} #{comment.users.lastName} •
                      time.comments__date(datetime=`${comment.createdAt}`) #{getFormatStringDate(comment.createdAt)}
                    p.comments__message #{comment.text}

          if user
            .comments__footer.comments__footer--user
              form(action=`/articles/${id}/comments` method='POST' enctype="multipart/form-data")
                input(type="hidden" name="_csrf" value=csrfToken)
                .comments__avatar.avatar
                  img(src=`/img/${user.avatar}` alt='аватар пользователя')
                label
                  textarea(rows='1' name='message' placeholder='Присоединиться к обсуждению')
                    if message
                      |#{message}
                +insertErrorMessages(validationMessages)
                button.comments__button.button.button--colored(type='submit') Опубликовать
          else
            .comments__footer.comments__footer--visitor
                a.comments__button.button.button--colored(href='/login') Войти
                .comments__registration
                  p.text.text--signature
                    a.title.title--small(href='/register') Регистрация <br>
                    | Чтобы присоединиться к
                    |                   переписке
                    |                   нужно зарегистрироваться
